events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Настройки для работы с куками между сервисами
    proxy_cookie_path / "/; SameSite=Lax";

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream для backend сервисов
    upstream auth_backend {
        server auth-backend:5001;
    }

    upstream frontend_app {
        server frontend:8080;
    }

    server {
        listen 80;
        server_name localhost;

        # Заголовки для корректной работы с куками
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Проксирование запросов к аутентификации
        location /auth/ {
            proxy_pass http://auth_backend/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Настройки для куков
            proxy_cookie_domain auth-backend $host;
            proxy_cookie_path /auth/ /auth/;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API endpoints для аутентификации
        location /auth/api/ {
            proxy_pass http://auth_backend/auth/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type application/json;
            
            # Настройки для куков
            proxy_cookie_domain auth-backend $host;
            proxy_cookie_path /auth/ /auth/;
        }

        # Статические файлы аутентификации
        location /auth/static/ {
            proxy_pass http://auth_backend/auth/static/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Кэширование статических файлов
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Основное приложение (frontend)
        location / {
            proxy_pass http://frontend_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Настройки для куков
            proxy_cookie_domain frontend $host;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Обработка ошибок
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 500 "Internal Server Error";
        }
        
        location = /404.html {
            return 404 "Not Found";
        }
    }
}